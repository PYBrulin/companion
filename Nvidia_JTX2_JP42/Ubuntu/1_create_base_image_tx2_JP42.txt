# TX2 setup script for use as companion computer with Jetpack 4.2 release

# STEP1: install NVidia image onto JTX2 (skip this step if you already have a factory image created for current release of Jetpack)

# Download the SDKManager to your host machine and follow all the instructions here: 
# https://developer.nvidia.com/embedded/jetpack

# STEP2: backup the TX2 kernel before installing APSync so that you can roll back in case something breaks or messes up

# Follow the steps as explained here: https://elinux.org/Jetson/TX2_Cloning
# The TX2 must be connected to the host machine over USB and entered into recovery mode. Then enter on the host machine:

cd home/nvidia/nvidia_sdk/JetPack_4.2_Linux_P3310/Linux_for_Tegra
sudo ./flash.sh -r -k APP -G mybackup_Jetpack42.img jetson-tx2 mmcblk0p1
# for "mybackup_Jetpack42" add your desired name for the backup image file. This will take about 30 minutes.


# STEP 3 : install apsync packages on the TX2:
# power on the TX
# log onto TX with your credentials as created during the installation of Jetpack 4.2.
# create an apsync user:

sudo useradd -s /bin/bash -m -U -G sudo,netdev,users,dialout,video apsync
sudo passwd apsync # apsync

# logon as apsync
su apsync
cd ~

# clone the Apsync git
mkdir GitHub
pushd GitHub

# insert here the link to the master repository
# my repository until we have a stable version ready 
git clone --single-branch --branch "next-tx2" https://github.com/mtbsteve/companion.git

pushd companion/Nvidia_JTX2_JP42/Ubuntu
sudo ./set-hostname   # reset the machine's hostname
# if your hostname is not tegra-ubuntu, then execute the following statement instead:
sudo perl -pe s/<enter your hostname here>/apsync/ -i /etc/hosts

sudo apt-get autoremove -y # avoid repeated no-longer-required annoyance
# The TX2 will autologin with apsync user after 5 seconds. During that time, you can normally logon to the TX2 console with any other user. 
sudo ./change-autologin-user_1804.sh # we go for a timed login instead. After 5 seconds, the TX2 will automatically boot under apsync user.
sudo ./remove-unattended-upgrades # 
sudo ./ensure_rc_local.sh

sudo reboot # ensure hostname correct / autologin working

pushd GitHub/companion/Nvidia_JTX2_JP42/Ubuntu
time sudo -E ./2_install_packages.sh # 20m
time sudo -E ./install_niceties || echo "Failed" # 20s

# setup of the ardupilot access point
sudo ./3_wifi_access_point_JP42.sh
# the TX2 will go into AP mode when you logon under apsync and will set up an access point with the SSID ardupilot.
# You can swap between AP mode and wifi client mode by executing from the apsync home directory:
# sudo ~/switch_AP_client_mode.sh

sudo ./4_setup_log_rotation # instant
# we will install mavproxy, however cmavnode will be used 
sudo ./5_setup_mavproxy.sh # instant

time sudo -E ./6_setup_video.sh # 1m
time sudo -E ./8_setup_cmavnode.sh # ~4m
time sudo -E ./setup_mavlink-router # ~2m
time sudo -E ./7_dflogger.sh # ~210s
time sudo -E ./setup-video-streaming # 11s

time sudo -E apt-get install -y libxml2-dev libxslt1.1 libxslt1-dev
time sudo pip install future lxml # 4m
time sudo ./install_pymavlink # new version required for apweb #1m
time sudo ./install_apweb # 2m

# OpenKAI not available due to OpenCV compatability issues....
# time sudo -E ./install_openkai.sh

# reboot and test image according to testing.txt
sudo reboot

# test if AP is set up correctly and if you can connect from a remote computer
ssh-copy-id apsync@10.42.0.1 #check the correct IP address for your installation
ssh apsync@10.42.0.1
exit

# Step 4: cleanup
time (pushd ~/GitHub/companion/Nvidia_JTX1/Ubuntu && sudo ./clean-for-imaging)


sudo poweroff

# Step 5: create backup image with ApSync installed

# Follow the steps as explained here: https://elinux.org/Jetson/TX2_Cloning
# The TX2 must be connected to the host machine over USB and entered into recovery mode. Then enter on the host machine:

cd home/nvidia/nvidia_sdk/JetPack_4.2_Linux_P3310/Linux_for_Tegra
sudo ./flash.sh -r -k APP -G mybackup_Jetpack42_apsync.img jetson-tx2 mmcblk0p1
# for "mybackup_Jetpack42" add your desired name for the backup image file. This will take about 30 ime sudo ./flash.sh -r -k APP -G $IMAGE_NAME jetson-tx2 mmcblk0p1 # about 30 minutes

# Done!
